Q1.

Τι θα τυπώσει το πρόγραμμα;
<pre>
def f():
	a = 7
	print(a, end = ' ')
a = 5
f()
print(a, end = ' ')
</pre>

1. 	5 5
2. 	7 5 ***
3.	7 7
4.	NameError


Q2.
Τι θα τυπώσει το πρόγραμμα;
<pre>
def f():
	a = a + 7
	print(a, end = ' ')
a = 5
f()
print(a, end = ' ')
</pre>

1. 	12 5
2. 	12 12
3.	7 5
4.	UnboundLocalError ***

Q3
Τι θα τυπώσει το πρόγραμμα;
<pre>
def f():
	global a
	a = a + 7
	print(a, end = ' ')
a = 5
f()
print(a, end = ' ')
</pre>

1. 	12 5
2. 	12 12 *** 
3.	7 5
4.	UnboundLocalError

Q4
Kαθολικές μεταβλητές είναι ...

1. εκείνες που ορίζονται ως global εντός συναρτήσεων
2. οι μεταβλητές που παίρνουν τιμή εκτός συναρτήσεων *** 
3. οι μεταβλητές που περνάνε ως ορίσματα συναρτήσεων

Q5.

Τι επιστρέφει ο παρακάτω κώδικας:
<pre>
def func(a, b, c, d):
    print (a+d)
func(1,2,3,4)
</pre>

1.	1 4
2. 	5 ***
3. 	error
4. 	3

Q6.
Τι ορίζουμε με τον παρακάτω κώδικα;
<pre>
def a(b,c,d,e):
    pass
</pre>

1. μία λίστα και την αρχικοποίησή της
2. μια κλάση
3. μια συνάρτηση που δεν κάνει κάτι ***
4. τίποτα από τα παραπάνω

Q7.

Τι θα επιστρέψει ο παρακάτω κώδικας;
<pre>
def func(*a):
	return sum([x for x in a if x%2 == 0])
print(func(2,3,4,5))
</pre>

1. 	error
2. 	14
3.	6 ***
4. 	8
5.	[2,4]


Q8
Τι θα επιστρέψει ο κώδικας;
<pre>
def d(x = 0, y = 0):
	return (x**2 + y**2)**0.5
d(3)
</pre>

1. 		error
2. 		3
3.		3.0 *** 	
4. 		9.0


Q9.
Τι θα μας επιστρέψει ο κώδικας αυτός;
<pre>
def f(x,y):
	if y != 0 : return x/y
print(type(f(2,3)))
</pre>

1.   	<class 'NoneType'>
2. 		<class 'int'>
3. 		5
4. 		<class 'float'> ***	
5. 		<class 'function'>


Q10.
Tι θα δώσει ο παρακάτω κώδικας:
<pre>
a = 5
if a < 3 or a > 6 : print('1')
else: print('2')
</pre>

1. 	error
2.	2 ***	
3.	1
4. 	3
5.	6

Q11. 
Τι θα τυπώσει ο παρακάτω κώδικας;
<pre>
a=4
if a==0 or 3:
    print (a)
else:
    print (a+1)
</pre>
1. error
2.	5
3.	4 ***
4.	7

Q12.
Ποιο το αποτέλεσμα του κώδικα:
<pre>
n1 = 'Nikos'
n2 = 'Nikitas'
if n1 == n2 : print('1')
elif n1[:3] == n2[:3]: print('2')
elif n1[0] == n2[0]: print('3')
else : print('4')
</pre>

1.	1
2.	2 ***
3.	3
4.	4

Q13
Ποιο το αποτέλεσμα;
<pre>
a = 'a'
z = 'z'
if ord(a) == ord(z) : print ('1')
elif (ord(z) - ord(a)) <= 15 : print('2')
elif (ord(z) - ord(a)) <= 30 : print('3')
else: print('4')
</pre>

1.	1
2.	2
3.  3 ***
4.	4

Q14.
Tι θα δώσει ο παρακάτω κώδικας:
<pre>
for i in [8,3,12]:
	print(i,end='_')
</pre>

1. 8_3_12
2. 8, 3, 12
3. 8 3 12
4. 3 8 12
5. 8_3_12_ ***	

Q15.
Τι θα δώσει ο παρακάτω κώδικας:
<pre>
for i in ['μήλα', 'αχλάδια', 'πορτοκάλια']:
	if i[0] > 'ν': break
	print(i, end=' ')
else:
	print('τα φρούτα κάνουν καλό')
</pre>

1.	μήλα αχλάδια ***
2.	μήλα αχλάδια πορτοκάλια τα φρούτα κάνουν καλό
3.	μήλα αχλάδια τα φρούτα κάνουν καλό
4.	μήλα αχλάδια πορτοκάλια
5.	τα φρούτα κάνουν καλό


Q16.
Ποιο το αποτέλεσμα :
<pre>
for item in sorted('σε γνωρίζω από την όψη'.split()):
	print(item[0], end=' ')
</pre>
1.			σ γ α τ ό
2.			σε γνωρίζω από την όψη
3.			['σε', 'γνωρίζω', 'από', 'την', 'όψη'']
4.			α γ σ τ ό ***
5.			σε γνωρίζω


Q17.
Ποιο το αποτέλεσμα:
<pre>
for i in sorted([12, 2, 3, 8, 7]):
	if i%3 == 0 : continue
	elif i%8 == 0 : break
	else: print(i, end=' ')
else:
	print('end of list')
</pre>

1.			2 3 7 8 12 end of list
2.			2 7 ***
3.			2 3 7
4.			2 3 7 end of list
5.			2 7 end of list



Q18.
Ποιο το αποτέλεσμα;
<pre> 
d = {1:'h', 2:'e', 3:'l', 4:'l', 5:'o'}
for i in sorted(d, key =d.get):
	print(d[i],end='')
else: print('world')
</pre>

1.		hello world
2.		helloworld
3.		ehlloworld ***
4.		olleh
5.		ehllo

Q19.
Tι θα δώσει ο παρακάτω κώδικας:
<pre>
for i in range(10):
	if i%2 == 0: continue
	elif i%7 == 0: break
	else: print(i, end= ' ')
else:
	print('end')
</pre>

1.		1 3 5 7 9
2.		1 3 5 7 9 end
3.		1 3 5 end
4.		1 3 5  ***
5.		1 3 5 7

Q20.
Τι θα δώσει ο παρακάτω κώδικας:
<pre>
for i in range(3, 12, 4):
	print(i+5, end=' ')
else:
	print('end')
</pre>

1.	3 7 11 end
2.	3 7 11
3.	8 12 16
4.	8 12 16 end ***
5.	3 12 4 end


Q21. 
Ποιο το αποτέλεσμα :
<pre>
for i in range(8, 2, -2):
	print(i+1, end = ' ')
	if i == 9 : break
</pre>
1.  	9 7 5 ***
2.		8 10 12
3.		9 11 13
4.		(κενό)
5.		-8 -10 -12

Q22. 
Ποιο το αποτέλεσμα:
<pre>
x=0
for i in range (0,5):
    x+=i
print (x)
</pre>

1. 	5
2. 	10 ***
3.	11
4.	15

Q23.

Tι θα δώσει ο παρακάτω κώδικας:
<pre>
x = 0
while x <= 5 : 
	print(x, end = ' ')
	x += 1
</pre>

1.		1 2 3 4 5
2.		1 2 3 4
3.		0 1 2 3 4
4.		0 1 2 3 4 5 ***


Q24.
Τι κάνει ο παρακάτω κώδικας:
<pre>
num = 0
while num > 99 or num < 10 :
    num = int(input("δώσε αριθμό:"))
else :
    print("έδωσες το {:2d}".format(num))
</pre>
1.	ζητάει από το χρήστη τους αριθμούς από 10 έως 99
2.	ζητάει από το χρήστη ένα αριθμό μέχρι αυτός να δόσει διψήφιο αριθμό ***
3.	ζητάει έναν αριθμό μεταξύ 10 και 99 και ελέγχει αν είναι ακέραιος
4.	ζητάει ένα αριθμό μεταξύ 10 και 99 και απαντάει μόνο αν ο αριθμός είναι ακέραιος



Q25.
Ποιο το αποτέλεσμα :
<pre>
poem = ''
while True:
	line = input()
	if line == '' : break
	else: poem += line+'\n'
</pre>
1. το πρόγραμμα δημιουργεί το ποιήμα poem με κενές γραμμές
2. το πρόγραμμα προσθέτει το κείμενο που δίνει ο χρήστης σε διαδοχικές γραμμές στην poem μέχρι να πατήσει enter ***
3. το πρόγραμμα περιμένει μέχρι ο χρήστης να δώσει ένα κενό χαρακτήρα και τότε σταματάει 
4. το πρόγραμμα ελέγχει για κενά στις γραμμές που δίνει ο χρήστης στην input

Q26.
Ποια η τιμή της παράστασης;
<pre>
[x for x in range(5) if x%2 == 0]
</pre>

1. [2, 4, 6]
2. [0, 2, 4] ***
3. [0, 1, 2]  
4. [0, 1, 2, 3, 4]



Q27.
Ποια η τιμή του l
<pre>
l = [x+3 for x in range(100) if x%50 > 47]
</pre>

1. [48, 49, 98, 99]
2. [51, 52, 101, 102] *** 
3. [1, 2, 3, ... 98, 99]
4. [3, 4, 5, ... 101, 102]
 



Q28.
Ο χώρος ονομάτων ενός module x μένει διακριτός από το χώρο ονομάτων του προγράμματος μας όταν το module εισάγεται με τον εξής τρόπο:

1. import x	*** 
2. from x import y
3. from x import *


Q29.
Ποια η τιμή της συνάρτησης: math.ceil(8.4)

1. 		8
2.	 	9  ***
3. 		error

Q30.
Ποιά η τιμή της συνάρτησης math.sqrt(4)

1. 		2
2. 		2.0  ***
3. 		16
4. 		4.0


Q31.
Ποια η τιμή της έκφρασης:
<pre>
math.pi == 3.14
</pre>

1. True
2. False   ***
3. error


Q32.
H δομή try/except αποκαλύπτει συντακτικά λάθη.

1. σωστό
2. λάθος  ***

Q33.
Το σκέλος finally της try/except εκτελείται:

1. πάντα *** 
2. όταν δεν υπάρχει σφάλμα
3. όταν υπάρχει σφάλμα
4. όταν υπάρχει σφάλμα που δεν έχει προβλεφθεί

Q34.
Έστω ο παρακάτω κώδικας ο οποίος εκτελείται για τιμές y, z = 5, 1:
Ποιό το αποτέλεσμα;
<pre>
try:
	x = y/z
print(x)
</pre>

1. 	error *** 
2. 	5
3. 	5.0
4. 	5.00

Q35.
Με την εντολή open(file, 'r', encoding='utf-8')

1. Ανοίγουμε το αρχείο file για να διαβάσουμε τα περιεχόμενα του *** 
2. Ανοίγουμε το αρχείο file για να προσθέσουμε δεδομένα στα περιεχόμενα του
3. Ανοίγουμε το αρχείο file για να γράψουμε δεδομένα
4. Ανοίγουμε το αρχείο για να ελέγξουμε την κωδικοποίηση του

Q36.
Ποια η τιμή της μεταβλητής f
<pre>
f = open(file, 'r', encoding='utf-8')
</pre>

1. Είναι το περιεχόμενο του αρχείου file
2. Είναι τo όνομα του αρχείου file
3. Είναι ένα αντικείμενο τύπου αρχείου *** 

Q37.
Περιγράψτε τι κάνει ο παρακάτω κώδικας:
<pre>
with open('file1.txt', 'r', encoding='utf-8') as f:
    for x in f: print(x.rstrip())
</pre>

1. Δίνει error
2. τυπώνει το περιεχόμενο του αρχείου γραμμή-γραμμή *** 
3. τυπώνει το περιεχόμενο του αρχείου χαρακτήρα-χαρακτήρα
4. τυπώνει το περιεχόμενο του αρχείου με κενά ανάμεσα στις γραμμές

Q38.
Τι μάς επιστρέφει η παρακάτω εντολή:
<pre>
os.getcwd()
</pre>

1. μας επιστρέφει τον φάκελο στον οποίο έχει εγκατασταθεί η python
2. μας επιστρέφει την έκδοση του λειτουργικού μας συστήματος
3. μας επιστρέφει την έκδοση της python στον υπολογιστή μας
4. μας επιστρέφει το φάκελο στον οποίο βρίσκεται το πρόγραμμά μας ***

Q39.
Τι μάς επιστρέφει η παρακάτω εντολή:
<pre>
os.listdir(d)
</pre>

1. μας δίνει το όνομα του τρέχοντος φακέλου εργασίας μας
2. μας δίνει μια λίστα με το περιεχόμενο του τρέχοντος φακέλου εργασίας μας ***
3. μας δίνει μια λίστα με τα ονόματα των υποφακέλων του τρέχοντος φακέλου εργασίας μας
4. μας δίνει το όνομα του φακέλου εγκατάστασης της python στον υπολογιστή μας

Q40.
Η εντολή os.remove(f) διαγράφει το αρχείο f, επίσης η εντολή os.system('rm f') διαγράφει το αρχείο f. Εντοπίστε διαφορές στις δύο προσεγγίσεις

1. Δεν υπάρχουν διαφορές κάνουν ακριβώς την ίδια εργασία
2. Η δεύτερη είναι πιο γρήγορη αφού εκτελεί απευθείας εντολή του λειτουργικού συστήματος
3. Η δεύτερη είναι μη μεταφέρσιμη, αφού είναι εντολή του συγκεκριμένου λειτουργικού ενώ η πρώτη θα εκτελεστεί ανεξάρτητα λειτουργικού συστήματος. ***

Q41.
Έαν f είναι το όνομα ενός αρχείου και d του φακέλου στον οποίο βρίσκεται, ποιο το αποτέλεσμα της εντολής:
<pre>
x = os.path.split(os.path.join(d,f))[0]
</pre>

1. d ***
2. f
3. error
4. το πλήρες όνομα του αρχείου, d/f

Q42.
<pre>
c = 0
for x in os.walk(os.getcwd()) : c += len(x[2])
</pre>
Ποια η τιμή της c ;

1. Το πλήθος των αρχείων του φακέλου εργασίας μας
2. Το πλήθος των αρχείων των φακέλων και υποφακέλων του φακέλου εργασίας μας *** 
3. Το πλήθος των υποφακέλων του φακέλου εργασίας μας
4. Το πλήθος των αρχείων του υπολογιστή μας
5. Το πλήθος των αρχείων του φακέλου εγκατάστασης της python


Q43.
Ποιο το αποτέλεσμα;
<pre>
chr (ord(‘a’))
</pre>

1.  ‘a’ ***
2.  97
3.  TypeError
4.  940


Q44.
Ποιο το αποτέλεσμα:
<pre>
s = ‘123456’
print(s[len(s)])
</pre>

1. 	‘6’
2. 	‘123456’
3. 	5
4.	IndexError ***

Q45.
Ποιο το αποτέλεσμα:
<pre>
li = [1,2]
li.extend(2*[4])
print(li)
</pre>

1. [1,2,4,4] *** 
2. [1,2,8]
3. [1,2,[4,4]]


Q46.
Ποιο το αποτέλεσμα;
<pre>
li = [5,10,15]
print(li.pop(1))
</pre>

1. [5,15]
2. 10  ***
3. [5,10]
4. 1

Q47.
Ποιο το αποτέλεσμα:
<pre>
li = (1,2,3,4)
print (li[1:2])
</pre>

1. (1,2)
2. 2
3. (2,) *** 
4. (2,3)


Q48.
Έστω:
<pre>
li = [(1,2), (3,4)]
</pre>
Ποια από τις παρακάτω εντολές δεν επιτρέπεται:

1. len(li[1])
2. li.remove((3,4))
3. li.pop()
4. li[0].pop() ***

Q49.
Ποιό το αποτέλεσμα των εντολών:
<pre>
b = 2
print( (b**2)**0.5 )
</pre>

1. error no power to 0.5
2. 2
3. 20
4. 2.0 ***



Q50. 
Αν b = 3
Ποιά η τιμή του 
<pre>
a = b ** 2 + b/2*3
</pre>

1. 6.5
2. 13.5 ***
3. 9.5
4. error

Q51.
Ποιο από τα παρακάτω στοιχεία δεν μπορεί να είναι κλειδί ενός λεξικού:

1. (1,2)
2. [1,2] ***
3. (2,)
4. 	2
5. 	2.0
6. '2'


Q52.
Έστω το λεξικό: dd = {1: 10, 2: 20}
Ποια από τις παρακάτω εντολές δίνει error:

1. len(dd[1]) ***
2. del dd[1]
3. dd[1] = 30
4. dd[3] = 40



Q53.
Αν dd = {1:5, 2:10}
Ποια από τις παρακάτω εντολές θα δόσει λάθος:

1. 	dd[1] = 8 + dd[2]
2. 	dd[3] = 12
3.	dd[8] = dd[8] + 2 ***



Q54.
Ποιο το αποτέλεσμα:
<pre>
len('Σε γνωρίζω από την κόψη'.split())
</pre>

1. 5 ***
2. 23
3. IndexError
4. 'Σε'
5. 'Σ γ α τ κ'


Q55.
Η εντολή type(3/2) τι τιμή θα δώσει;

1. error no type value
2. <class int> ακέραιος αριθμός
3. <class float> πραγματικός αριθμός ***
4. <class divsion> διαίρεση ακεραίων

